{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mario/Documents/React/worker-sales/frontend/src/AddSale.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport axios from \"axios\";\nimport { Typography, Container, Toolbar, Switch, AppBar, Button, Paper, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/AddSaleStyles\";\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction AddSale() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  let toggledTheme = useSelector(state => state.theme);\n  const [newSale, setNewSale] = useState({\n    date: \"\",\n    qty: \"\"\n  });\n  let employeeList = useSelector(state => state.workers);\n\n  const handleSubmit = async () => {\n    const elementsIndex = employeeList.findIndex(element => element._id === id);\n    let allSales = employeeList[elementsIndex].sales;\n    allSales.push(newSale);\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"sales\", allSales);\n    const newSales = {\n      sales: allSales\n    };\n    console.log(newSales);\n    await axios({\n      method: \"patch\",\n      url: `/api/users/${id}`,\n      data: newSales\n    });\n    dispatch(fetchData);\n    history.push(`/employee/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n      backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`\n    },\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      style: {\n        backgroundColor: toggledTheme ? \"white\" : \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          style: {\n            color: toggledTheme ? \"black\" : \"white\"\n          },\n          onClick: () => {\n            history.push(\"/\");\n          },\n          children: \"Sales Administration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: toggledTheme,\n          color: \"secondary\",\n          onClick: () => {\n            dispatch(toggled());\n            localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: classes.themeTitle,\n          style: {\n            color: toggledTheme ? \"black\" : \"white\"\n          },\n          children: toggledTheme ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.container,\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Congratulations On The Sale!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"New Sale\",\n                id: \"newSale\",\n                name: \"newSale\",\n                type: \"number\",\n                value: newSale.qty,\n                required: true,\n                fullWidth: true,\n                validators: [\"required\"],\n                errorMessages: [\"This field is required\"],\n                onChange: e => {\n                  setNewSale({ ...newSale,\n                    qty: parseInt(e.target.value)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                id: \"date\",\n                label: \"Date of Sale\",\n                type: \"date\",\n                defaultValue: \"2017-05-24\",\n                className: classes.textField,\n                value: newSale.date,\n                validators: [\"required\"],\n                errorMessages: [\"This field is required\"],\n                InputLabelProps: {\n                  shrink: true\n                },\n                onChange: e => {\n                  setNewSale({ ...newSale,\n                    date: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: toggledTheme ? \"secondary\" : \"primary\",\n            className: classes.submit,\n            children: \"Register Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            className: classes.submit,\n            onClick: () => {\n              history.push(`/employee/${id}`);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddSale, \"xWhhqDafuuBHXZQk/8lwSmRaAsU=\", false, function () {\n  return [useStyles, useDispatch, useHistory, useParams, useSelector, useSelector];\n});\n\n_c = AddSale;\nexport default AddSale;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSale\");","map":{"version":3,"sources":["/home/mario/Documents/React/worker-sales/frontend/src/AddSale.js"],"names":["useState","ValidatorForm","TextValidator","fetchData","useHistory","useParams","useSelector","useDispatch","toggled","axios","Typography","Container","Toolbar","Switch","AppBar","Button","Paper","Grid","useStyles","AddSale","classes","dispatch","history","id","toggledTheme","state","theme","newSale","setNewSale","date","qty","employeeList","workers","handleSubmit","elementsIndex","findIndex","element","_id","allSales","sales","push","bodyFormData","FormData","append","newSales","console","log","method","url","data","backgroundColor","backgroundImage","bgd","bgl","root","title","color","localStorage","setItem","JSON","stringify","themeTitle","container","paper","form","e","parseInt","target","value","textField","shrink","submit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport axios from \"axios\";\n\nimport {\n  Typography,\n  Container,\n  Toolbar,\n  Switch,\n  AppBar,\n  Button,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { useStyles } from \"./styles/AddSaleStyles\";\n\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction AddSale() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { id } = useParams();\n\n  let toggledTheme = useSelector((state) => state.theme);\n\n  const [newSale, setNewSale] = useState({\n    date: \"\",\n    qty: \"\",\n  });\n\n  let employeeList = useSelector((state) => state.workers);\n\n  const handleSubmit = async () => {\n    const elementsIndex = employeeList.findIndex(\n      (element) => element._id === id\n    );\n\n    let allSales = employeeList[elementsIndex].sales;\n    allSales.push(newSale);\n\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"sales\", allSales);\n\n    const newSales = {\n      sales: allSales,\n    };\n    console.log(newSales);\n    await axios({\n      method: \"patch\",\n      url: `/api/users/${id}`,\n      data: newSales,\n    });\n    dispatch(fetchData);\n    history.push(`/employee/${id}`);\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n        backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`,\n      }}\n      className={classes.root}\n    >\n      <AppBar\n        position=\"static\"\n        style={{ backgroundColor: toggledTheme ? \"white\" : \"black\" }}\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            style={{ color: toggledTheme ? \"black\" : \"white\" }}\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            Sales Administration\n          </Typography>\n          <Switch\n            checked={toggledTheme}\n            color=\"secondary\"\n            onClick={() => {\n              dispatch(toggled());\n              localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n            }}\n          />\n          <Typography\n            variant=\"subtitle1\"\n            className={classes.themeTitle}\n            style={{ color: toggledTheme ? \"black\" : \"white\" }}\n          >\n            {toggledTheme ? \"Dark Mode\" : \"Light Mode\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.container} maxWidth=\"sm\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">Congratulations On The Sale!</Typography>\n          <ValidatorForm\n            className={classes.form}\n            onSubmit={handleSubmit}\n            noValidate\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"New Sale\"\n                  id=\"newSale\"\n                  name=\"newSale\"\n                  type=\"number\"\n                  value={newSale.qty}\n                  required\n                  fullWidth\n                  validators={[\"required\"]}\n                  errorMessages={[\"This field is required\"]}\n                  onChange={(e) => {\n                    setNewSale({\n                      ...newSale,\n                      qty: parseInt(e.target.value),\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextValidator\n                  id=\"date\"\n                  label=\"Date of Sale\"\n                  type=\"date\"\n                  defaultValue=\"2017-05-24\"\n                  className={classes.textField}\n                  value={newSale.date}\n                  validators={[\"required\"]}\n                  errorMessages={[\"This field is required\"]}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={(e) => {\n                    setNewSale({\n                      ...newSale,\n                      date: e.target.value,\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color={toggledTheme ? \"secondary\" : \"primary\"}\n              className={classes.submit}\n            >\n              Register Sale\n            </Button>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={() => {\n                history.push(`/employee/${id}`);\n              }}\n            >\n              Cancel\n            </Button>\n          </ValidatorForm>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nexport default AddSale;\n"]},"metadata":{},"sourceType":"module"}