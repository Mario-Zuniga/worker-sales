{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mario/Documents/React/worker-sales/frontend/src/ShowSales.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { LinearProgress, ListItemText, Typography, Container, ListItem, Toolbar, Switch, AppBar, Button, Paper, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/ShowSalesStyles\";\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction ShowSales() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  let toggledTheme = useSelector(state => state.theme);\n  let employee = useSelector(state => state.workers);\n\n  if (employee === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } else {\n    const elementsIndex = employee.findIndex(element => element._id === id);\n    let totalSold = 0;\n\n    if (employee[elementsIndex].sales.length > 0) {\n      for (let i = 0; i < employee[elementsIndex].sales.length; i++) {\n        totalSold += parseInt(employee[elementsIndex].sales[i].qty);\n      }\n    }\n\n    const progress = totalSold / parseInt(employee[elementsIndex].expSales) * 100;\n\n    const deleteSale = async id => {\n      await axios.delete(`/api/users/${id}`);\n      dispatch(fetchData);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n        backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`\n      },\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        style: {\n          backgroundColor: toggledTheme ? \"white\" : \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            style: {\n              color: toggledTheme ? \"black\" : \"white\"\n            },\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \"Sales Administration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggledTheme,\n            color: \"secondary\",\n            onClick: () => {\n              dispatch(toggled());\n              localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: classes.themeTitle,\n            style: {\n              color: toggledTheme ? \"black\" : \"white\"\n            },\n            children: toggledTheme ? \"Dark Mode\" : \"Light Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.container,\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.grid,\n            item: true,\n            xs: 12,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: employee[elementsIndex].firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: employee[elementsIndex].lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                fullWidth: true,\n                variant: \"contained\",\n                className: classes.button,\n                color: toggledTheme ? \"secondary\" : \"primary\",\n                onClick: () => {\n                  history.push(`/sales/${id}`);\n                },\n                children: \"Add Sale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 9,\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.salesInfo,\n                variant: \"h5\",\n                children: \"Total sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.salesInfo,\n                variant: \"body1\",\n                children: `$${totalSold} / $${employee[elementsIndex].expSales}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                  className: classes.buffer,\n                  color: toggledTheme ? \"secondary\" : \"primary\",\n                  variant: \"determinate\",\n                  value: progress > 100 ? 100 : progress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"Sales Log\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), employee[elementsIndex].sales.map(l => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `Quantity: $${l.qty}`,\n                  secondary: `Date: ${l.date}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ShowSales, \"3zQbnWlapJdP6uS67j4V+1BJKHE=\", false, function () {\n  return [useStyles, useHistory, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ShowSales;\nexport default ShowSales;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSales\");","map":{"version":3,"sources":["/home/mario/Documents/React/worker-sales/frontend/src/ShowSales.js"],"names":["useHistory","useParams","useSelector","useDispatch","toggled","v4","uuidv4","LinearProgress","ListItemText","Typography","Container","ListItem","Toolbar","Switch","AppBar","Button","Paper","Grid","useStyles","ShowSales","classes","history","id","dispatch","toggledTheme","state","theme","employee","workers","elementsIndex","findIndex","element","_id","totalSold","sales","length","i","parseInt","qty","progress","expSales","deleteSale","axios","delete","fetchData","backgroundColor","backgroundImage","bgd","bgl","root","title","color","push","localStorage","setItem","JSON","stringify","themeTitle","container","grid","paper","firstName","lastName","button","salesInfo","buffer","map","l","date"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  LinearProgress,\n  ListItemText,\n  Typography,\n  Container,\n  ListItem,\n  Toolbar,\n  Switch,\n  AppBar,\n  Button,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { useStyles } from \"./styles/ShowSalesStyles\";\n\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction ShowSales() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n\n  let toggledTheme = useSelector((state) => state.theme);\n  let employee = useSelector((state) => state.workers);\n\n  if (employee === null) {\n    return <h1>Loading</h1>;\n  } else {\n    const elementsIndex = employee.findIndex((element) => element._id === id);\n\n    let totalSold = 0;\n    if (employee[elementsIndex].sales.length > 0) {\n      for (let i = 0; i < employee[elementsIndex].sales.length; i++) {\n        totalSold += parseInt(employee[elementsIndex].sales[i].qty);\n      }\n    }\n\n    const progress =\n      (totalSold / parseInt(employee[elementsIndex].expSales)) * 100;\n\n    const deleteSale = async (id) => {\n      await axios.delete(`/api/users/${id}`);\n      dispatch(fetchData);\n    };\n\n    return (\n      <div\n        style={{\n          backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n          backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`,\n        }}\n        className={classes.root}\n      >\n        <AppBar\n          position=\"static\"\n          style={{ backgroundColor: toggledTheme ? \"white\" : \"black\" }}\n        >\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              className={classes.title}\n              style={{ color: toggledTheme ? \"black\" : \"white\" }}\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Sales Administration\n            </Typography>\n            <Switch\n              checked={toggledTheme}\n              color=\"secondary\"\n              onClick={() => {\n                dispatch(toggled());\n                localStorage.setItem(\n                  \"themeData\",\n                  JSON.stringify(!toggledTheme)\n                );\n              }}\n            />\n            <Typography\n              variant=\"subtitle1\"\n              className={classes.themeTitle}\n              style={{ color: toggledTheme ? \"black\" : \"white\" }}\n            >\n              {toggledTheme ? \"Dark Mode\" : \"Light Mode\"}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Container className={classes.container} maxWidth=\"lg\">\n          <Grid container spacing={3}>\n            <Grid className={classes.grid} item xs={12} sm={3}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">\n                  <div>{employee[elementsIndex].firstName}</div>\n                  <div>{employee[elementsIndex].lastName}</div>\n                </Typography>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  className={classes.button}\n                  color={toggledTheme ? \"secondary\" : \"primary\"}\n                  onClick={() => {\n                    history.push(`/sales/${id}`);\n                  }}\n                >\n                  Add Sale\n                </Button>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              <Paper className={classes.paper}>\n                <Typography className={classes.salesInfo} variant=\"h5\">\n                  Total sales\n                </Typography>\n\n                <Typography\n                  className={classes.salesInfo}\n                  variant=\"body1\"\n                >{`$${totalSold} / $${employee[elementsIndex].expSales}`}</Typography>\n                <div>\n                  <LinearProgress\n                    className={classes.buffer}\n                    color={toggledTheme ? \"secondary\" : \"primary\"}\n                    variant=\"determinate\"\n                    value={progress > 100 ? 100 : progress}\n                  />\n                </div>\n              </Paper>\n\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">Sales Log</Typography>\n                {employee[elementsIndex].sales.map((l) => (\n                  <ListItem key={uuidv4()}>\n                    <ListItemText\n                      primary={`Quantity: $${l.qty}`}\n                      secondary={`Date: ${l.date}`}\n                    />\n                  </ListItem>\n                ))}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ShowSales;\n"]},"metadata":{},"sourceType":"module"}