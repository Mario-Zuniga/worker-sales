{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mario/Documents/React/worker-sales/frontend/src/EditWorker.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Typography, Container, Toolbar, Switch, AppBar, Button, Paper, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"./styles/AddWorkerStyles\";\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction EditWorker() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  let employee = useSelector(state => state.workers);\n  let toggledTheme = useSelector(state => state.theme);\n  const elementsIndex = employee.findIndex(element => element._id === id);\n  const [newInfo, setNewInfo] = useState({\n    firstName: employee[elementsIndex].firstName,\n    lastName: \"Derbez\",\n    email: employee[elementsIndex].email,\n    expSales: employee[elementsIndex].expSales,\n    sales: employee[elementsIndex].sales\n  });\n\n  const handleSubmit = async () => {\n    console.log(newInfo.lastName);\n    await axios({\n      method: \"patch\",\n      url: `/api/users/edit/${id}`,\n      data: newInfo\n    });\n    dispatch(fetchData);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n      backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`\n    },\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      style: {\n        backgroundColor: toggledTheme ? \"white\" : \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          style: {\n            color: toggledTheme ? \"black\" : \"white\"\n          },\n          onClick: () => {\n            history.push(\"/\");\n          },\n          children: \"Sales Administration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: toggledTheme,\n          color: \"secondary\",\n          onClick: () => {\n            dispatch(toggled());\n            localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          className: classes.themeTitle,\n          style: {\n            color: toggledTheme ? \"black\" : \"white\"\n          },\n          children: toggledTheme ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.container,\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"What Did We Miss?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"First Name\",\n                id: \"firtsName\",\n                name: \"firstName\",\n                type: \"text\",\n                validators: [\"required\"],\n                errorMessages: [\"This field is required\"],\n                value: newInfo.firstName,\n                required: true,\n                fullWidth: true,\n                onChange: e => {\n                  setNewInfo({ ...newInfo,\n                    firstName: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Last Name\",\n                id: \"lastName\",\n                name: \"lastName\",\n                type: \"text\",\n                validators: [\"required\"],\n                errorMessages: [\"This field is required\"],\n                value: newInfo.lastName,\n                required: true,\n                fullWidth: true,\n                onChange: e => {\n                  console.log(e.target.value);\n                  setNewInfo({ ...newInfo,\n                    lastName: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Email Address\",\n                id: \"email\",\n                name: \"email\",\n                type: \"email\",\n                validators: [\"required\", \"isEmail\"],\n                errorMessages: [\"This field is required\", \"Email is not valid\"],\n                value: newInfo.email,\n                required: true,\n                fullWidth: true,\n                onChange: e => {\n                  setNewInfo({ ...newInfo,\n                    email: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextValidator, {\n                variant: \"outlined\",\n                label: \"Expected Sales\",\n                id: \"expSales\",\n                name: \"expSales\",\n                type: \"number\",\n                validators: [\"required\"],\n                errorMessages: [\"this field is required\"],\n                value: newInfo.expSales,\n                required: true,\n                fullWidth: true,\n                onChange: e => {\n                  setNewInfo({ ...newInfo,\n                    expSales: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: toggledTheme ? \"secondary\" : \"primary\",\n            className: classes.submit,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            className: classes.submit,\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditWorker, \"pN1ksatzxirDrF062Ku9qnMM9DQ=\", false, function () {\n  return [useStyles, useDispatch, useHistory, useParams, useSelector, useSelector];\n});\n\n_c = EditWorker;\nexport default EditWorker;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditWorker\");","map":{"version":3,"sources":["/home/mario/Documents/React/worker-sales/frontend/src/EditWorker.js"],"names":["useState","ValidatorForm","TextValidator","fetchData","useSelector","useDispatch","toggled","useHistory","useParams","axios","Typography","Container","Toolbar","Switch","AppBar","Button","Paper","Grid","useStyles","EditWorker","classes","dispatch","history","id","employee","state","workers","toggledTheme","theme","elementsIndex","findIndex","element","_id","newInfo","setNewInfo","firstName","lastName","email","expSales","sales","handleSubmit","console","log","method","url","data","push","backgroundColor","backgroundImage","bgd","bgl","root","title","color","localStorage","setItem","JSON","stringify","themeTitle","container","paper","form","e","target","value","submit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggled } from \"./redux/actions/index\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  Typography,\n  Container,\n  Toolbar,\n  Switch,\n  AppBar,\n  Button,\n  Paper,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { useStyles } from \"./styles/AddWorkerStyles\";\n\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction EditWorker() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n\n  let employee = useSelector((state) => state.workers);\n  let toggledTheme = useSelector((state) => state.theme);\n\n  const elementsIndex = employee.findIndex((element) => element._id === id);\n\n  const [newInfo, setNewInfo] = useState({\n    firstName: employee[elementsIndex].firstName,\n    lastName: \"Derbez\",\n    email: employee[elementsIndex].email,\n    expSales: employee[elementsIndex].expSales,\n    sales: employee[elementsIndex].sales,\n  });\n\n  const handleSubmit = async () => {\n    console.log(newInfo.lastName);\n    await axios({\n      method: \"patch\",\n      url: `/api/users/edit/${id}`,\n      data: newInfo,\n    });\n\n    dispatch(fetchData);\n    history.push(\"/\");\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n        backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`,\n      }}\n      className={classes.root}\n    >\n      <AppBar\n        position=\"static\"\n        style={{ backgroundColor: toggledTheme ? \"white\" : \"black\" }}\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            style={{ color: toggledTheme ? \"black\" : \"white\" }}\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            Sales Administration\n          </Typography>\n          <Switch\n            checked={toggledTheme}\n            color=\"secondary\"\n            onClick={() => {\n              dispatch(toggled());\n              localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n            }}\n          />\n          <Typography\n            variant=\"subtitle1\"\n            className={classes.themeTitle}\n            style={{ color: toggledTheme ? \"black\" : \"white\" }}\n          >\n            {toggledTheme ? \"Dark Mode\" : \"Light Mode\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Container className={classes.container} maxWidth=\"sm\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">What Did We Miss?</Typography>\n          <ValidatorForm\n            className={classes.form}\n            onSubmit={handleSubmit}\n            noValidate\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"First Name\"\n                  id=\"firtsName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  validators={[\"required\"]}\n                  errorMessages={[\"This field is required\"]}\n                  value={newInfo.firstName}\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    setNewInfo({\n                      ...newInfo,\n                      firstName: e.target.value,\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Last Name\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  validators={[\"required\"]}\n                  errorMessages={[\"This field is required\"]}\n                  value={newInfo.lastName}\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                    setNewInfo({\n                      ...newInfo,\n                      lastName: e.target.value,\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Email Address\"\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  validators={[\"required\", \"isEmail\"]}\n                  errorMessages={[\n                    \"This field is required\",\n                    \"Email is not valid\",\n                  ]}\n                  value={newInfo.email}\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    setNewInfo({\n                      ...newInfo,\n                      email: e.target.value,\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextValidator\n                  variant=\"outlined\"\n                  label=\"Expected Sales\"\n                  id=\"expSales\"\n                  name=\"expSales\"\n                  type=\"number\"\n                  validators={[\"required\"]}\n                  errorMessages={[\"this field is required\"]}\n                  value={newInfo.expSales}\n                  required\n                  fullWidth\n                  onChange={(e) => {\n                    setNewInfo({\n                      ...newInfo,\n                      expSales: e.target.value,\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color={toggledTheme ? \"secondary\" : \"primary\"}\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Cancel\n            </Button>\n          </ValidatorForm>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nexport default EditWorker;\n"]},"metadata":{},"sourceType":"module"}