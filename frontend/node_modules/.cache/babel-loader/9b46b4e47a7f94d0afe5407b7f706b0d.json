{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mario/Documents/React/worker-sales/frontend/src/WorkersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { toggled } from \"./redux/actions/index\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { ListItemText, Typography, Container, ListItem, Toolbar, Divider, AppBar, Switch, Button, Paper, Grid, List } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useStyles } from \"./styles/WorkersListStyles\";\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction WorkersList() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let toggledTheme = useSelector(state => state.theme);\n  let employeeList = useSelector(state => state.workers);\n  const [list, setList] = useState({\n    flag: false,\n    data: []\n  });\n  useEffect(() => {\n    const FetchData = async () => {\n      setList({\n        flag: true,\n        data: employeeList\n      });\n    };\n\n    FetchData();\n  }, [employeeList]);\n\n  const deleteWorker = async id => {\n    await axios.delete(`/api/users/${id}`);\n    dispatch(fetchData);\n  };\n\n  if (employeeList === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  } else {\n    console.log(list);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n        backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`\n      },\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        style: {\n          backgroundColor: toggledTheme ? \"white\" : \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            style: {\n              color: toggledTheme ? \"black\" : \"white\"\n            },\n            onClick: () => {\n              history.push(\"/\");\n            },\n            children: \"Sales Administration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: toggledTheme,\n            color: \"secondary\",\n            onClick: () => {\n              dispatch(toggled());\n              localStorage.setItem(\"themeData\", JSON.stringify(!toggledTheme));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: classes.themeTitle,\n            style: {\n              color: toggledTheme ? \"black\" : \"white\"\n            },\n            children: toggledTheme ? \"Dark Mode\" : \"Light Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.container,\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.grid,\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Welcome Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.button,\n                fullWidth: true,\n                variant: \"contained\",\n                color: toggledTheme ? \"secondary\" : \"primary\",\n                onClick: () => {\n                  history.push(\"/add\");\n                },\n                children: \"Add New Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"List of Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: employeeList.map(e => /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    onClick: () => {\n                      history.push(`/employee/${e._id}`);\n                    },\n                    primary: `${e.firstName} ${e.lastName}`,\n                    secondary: `ID: ${e._id}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    onClick: () => deleteWorker(e._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)]\n                }, e._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(WorkersList, \"oGFzrbxVfEK5jnlFXR3v3iuN6VU=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = WorkersList;\nexport default WorkersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"sources":["/home/mario/Documents/React/worker-sales/frontend/src/WorkersList.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchData","toggled","axios","useHistory","ListItemText","Typography","Container","ListItem","Toolbar","Divider","AppBar","Switch","Button","Paper","Grid","List","DeleteIcon","useStyles","WorkersList","classes","history","dispatch","toggledTheme","state","theme","employeeList","workers","list","setList","flag","data","FetchData","deleteWorker","id","delete","console","log","backgroundColor","backgroundImage","bgd","bgl","root","title","color","push","localStorage","setItem","JSON","stringify","themeTitle","container","grid","paper","button","map","e","_id","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"./redux/actions/index\";\nimport { toggled } from \"./redux/actions/index\";\nimport axios from \"axios\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  ListItemText,\n  Typography,\n  Container,\n  ListItem,\n  Toolbar,\n  Divider,\n  AppBar,\n  Switch,\n  Button,\n  Paper,\n  Grid,\n  List,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { useStyles } from \"./styles/WorkersListStyles\";\n\nimport bgl from \"./styles/bg-l.svg\";\nimport bgd from \"./styles/bg-d.svg\";\n\nfunction WorkersList() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let toggledTheme = useSelector((state) => state.theme);\n  let employeeList = useSelector((state) => state.workers);\n\n  const [list, setList] = useState({\n    flag: false,\n    data: [],\n  });\n\n  useEffect(() => {\n    const FetchData = async () => {\n      setList({\n        flag: true,\n        data: employeeList,\n      });\n    };\n    FetchData();\n  }, [employeeList]);\n\n  const deleteWorker = async (id) => {\n    await axios.delete(`/api/users/${id}`);\n    dispatch(fetchData);\n  };\n\n  if (employeeList === null) {\n    return <h1>Loading</h1>;\n  } else {\n    console.log(list);\n    return (\n      <div\n        style={{\n          backgroundColor: toggledTheme ? \"#011212\" : \"#0FB5B8\",\n          backgroundImage: toggledTheme ? `url(${bgd})` : `url(${bgl})`,\n        }}\n        className={classes.root}\n      >\n        <AppBar\n          position=\"static\"\n          style={{ backgroundColor: toggledTheme ? \"white\" : \"black\" }}\n        >\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              className={classes.title}\n              style={{ color: toggledTheme ? \"black\" : \"white\" }}\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              Sales Administration\n            </Typography>\n            <Switch\n              checked={toggledTheme}\n              color=\"secondary\"\n              onClick={() => {\n                dispatch(toggled());\n                localStorage.setItem(\n                  \"themeData\",\n                  JSON.stringify(!toggledTheme)\n                );\n              }}\n            />\n            <Typography\n              variant=\"subtitle1\"\n              className={classes.themeTitle}\n              style={{ color: toggledTheme ? \"black\" : \"white\" }}\n            >\n              {toggledTheme ? \"Dark Mode\" : \"Light Mode\"}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Container className={classes.container} maxWidth=\"lg\">\n          <Grid container spacing={6}>\n            <Grid className={classes.grid} item xs={12} sm={4}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h4\">Welcome Back</Typography>\n                <Divider />\n                <Button\n                  className={classes.button}\n                  fullWidth\n                  variant=\"contained\"\n                  color={toggledTheme ? \"secondary\" : \"primary\"}\n                  onClick={() => {\n                    history.push(\"/add\");\n                  }}\n                >\n                  Add New Employee\n                </Button>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={8}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h5\">List of Employees</Typography>\n                <List>\n                  {employeeList.map((e) => (\n                    <ListItem key={e._id} button>\n                      <ListItemText\n                        onClick={() => {\n                          history.push(`/employee/${e._id}`);\n                        }}\n                        primary={`${e.firstName} ${e.lastName}`}\n                        secondary={`ID: ${e._id}`}\n                      />\n                      <DeleteIcon onClick={() => deleteWorker(e._id)} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default WorkersList;\n"]},"metadata":{},"sourceType":"module"}